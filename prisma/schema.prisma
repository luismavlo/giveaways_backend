// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  DELETED
}

model User {
  userId   Int    @id @default(autoincrement())
  fullname String @db.VarChar(200)
  email    String @unique @db.VarChar(100)
  password String @db.VarChar(255)
  avatar   String @db.VarChar(255)
}

model Giveaway {
  giveawayId          Int           @id @default(autoincrement())
  title               String        @db.VarChar(255)
  description         String
  giveawayDate        DateTime
  participantsLimit   Int
  prize               String        @db.VarChar(255)
  winnerParticipantId Int           @unique
  winnerParticipant   Participant   @relation(name: "winnerParticipant", fields: [winnerParticipantId], references: [participantId])
  createdAt           DateTime      @default(now())
  participants        Participant[] @relation(name: "GiveawayParticipants")
  status              Status        @default(ACTIVE)
}

model Participant {
  participantId  Int       @id @default(autoincrement())
  discordId      String
  fullname       String    @db.VarChar(200)
  email          String    @db.VarChar(100)
  giveaway       Giveaway  @relation(name: "GiveawayParticipants", fields: [giveawayId], references: [giveawayId])
  giveawayId     Int
  createdIt      DateTime  @default(now())
  status         Status    @default(ACTIVE)
  giveawayWinner Giveaway? @relation(name: "winnerParticipant")
}
